{"ast":null,"code":"var _jsxFileName = \"/Users/caesar.pamungkas/demo/src/pages/Login.js\";\nimport React from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd'; // import { useHistory, Redirect } from 'react-router-dom';\n\nimport axios from 'axios';\nimport './Login.css';\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\nexport default function Login() {\n  // const history = useHistory();\n  const onFinish = values => {\n    axios({\n      method: \"POST\",\n      url: \"/mocks/login.json\" // body: {\n      //     cust_email : values.username,\n      //     cust_password : values.password,\n      //     },\n\n    }).then(function (res) {\n      window.localStorage.setItem(\"token\", res.data.data.token); // history.push('/')\n    });\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  }; //   if(window.localStorage.getItem(\"token\")){\n  //     return <Redirect to=\"/\" />;\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Username\",\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: 'Please input your username!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Password\",\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    name: \"remember\",\n    valuePropName: \"checked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"Remember me\")), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Submit\"))));\n}\n;","map":{"version":3,"sources":["/Users/caesar.pamungkas/demo/src/pages/Login.js"],"names":["React","Form","Input","Button","Checkbox","axios","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","onFinish","values","method","url","then","res","window","localStorage","setItem","data","token","onFinishFailed","errorInfo","console","log","remember","required","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,QAA9B,QAA8C,MAA9C,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE;AADE,GADC;AAIXC,EAAAA,UAAU,EAAE;AACVD,IAAAA,IAAI,EAAE;AADI;AAJD,CAAf;AAQE,MAAME,UAAU,GAAG;AACjBD,EAAAA,UAAU,EAAE;AACVE,IAAAA,MAAM,EAAE,CADE;AAEVH,IAAAA,IAAI,EAAE;AAFI;AADK,CAAnB;AAOF,eAAe,SAASI,KAAT,GAAgB;AAC3B;AAEE,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AAC3BT,IAAAA,KAAK,CAAC;AACFU,MAAAA,MAAM,EAAE,MADN;AAEFC,MAAAA,GAAG,EAAE,mBAFH,CAGF;AACA;AACA;AACA;;AANE,KAAD,CAAL,CAQCC,IARD,CAQM,UAASC,GAAT,EAAa;AACfC,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCH,GAAG,CAACI,IAAJ,CAASA,IAAT,CAAcC,KAAnD,EADe,CAEf;AACH,KAXD;AAYD,GAbD;;AAeA,QAAMC,cAAc,GAAGC,SAAS,IAAI;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,SAAvB;AACD,GAFD,CAlByB,CAsB3B;AACA;AACA;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,oBACInB,MADJ;AAEA,IAAA,IAAI,EAAC,OAFL;AAGA,IAAA,aAAa,EAAE;AACXsB,MAAAA,QAAQ,EAAE;AADC,KAHf;AAMA,IAAA,QAAQ,EAAEf,QANV;AAOA,IAAA,cAAc,EAAEW,cAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBASA,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,KAAK,EAAC,UADV;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAE,CACP;AACIK,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADO,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CATA,eAsBA,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,KAAK,EAAC,UADV;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAE,CACP;AACID,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADO,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVA,CAtBA,eAmCA,oBAAC,IAAD,CAAM,IAAN,oBAAepB,UAAf;AAA2B,IAAA,IAAI,EAAC,UAAhC;AAA2C,IAAA,aAAa,EAAC,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAnCA,eAuCA,oBAAC,IAAD,CAAM,IAAN,oBAAeA,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAvCA,CADJ,CADJ;AAiDH;AAAA","sourcesContent":["import React from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\n// import { useHistory, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.css';\n\nconst layout = {\n    labelCol: {\n      span: 8,\n    },\n    wrapperCol: {\n      span: 16,\n    },\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 8,\n      span: 16,\n    },\n  };\n\nexport default function Login(){\n    // const history = useHistory();\n\n      const onFinish = (values) => {\n        axios({\n            method: \"POST\",\n            url: \"/mocks/login.json\",\n            // body: {\n            //     cust_email : values.username,\n            //     cust_password : values.password,\n            //     },\n        })\n        .then(function(res){\n            window.localStorage.setItem(\"token\", res.data.data.token)\n            // history.push('/')\n        })\n      };\n    \n      const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n      };\n\n    //   if(window.localStorage.getItem(\"token\")){\n    //     return <Redirect to=\"/\" />;\n    // }\n\n    return (\n        <div className=\"login-form\">\n            <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{\n                remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            >\n            <Form.Item\n                label=\"Username\"\n                name=\"username\"\n                rules={[\n                {\n                    required: true,\n                    message: 'Please input your username!',\n                },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n\n            <Form.Item\n                label=\"Password\"\n                name=\"password\"\n                rules={[\n                {\n                    required: true,\n                    message: 'Please input your password!',\n                },\n                ]}\n            >\n            <Input.Password />\n            </Form.Item>\n\n            <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n                <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n                </Button>\n            </Form.Item>\n            </Form>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}